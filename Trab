%Passo 0
%Nome:Daniel Leme Junior
%Ra:  725805
%Nome:Igor Inacio
%Ra:  725804
%Matlab

close all
clear all
clc

%Passo 1
A = imread('pillsetc.png'); %Lê a imagem
figure, imshow(A),title('Passo 1 - Original'); %exibe a imagem

%Passo 2
nivel = graythresh(A); %obtém o nivel global de threshold para binarização da imagem
imagemPasso2 = im2bw(A,nivel); %binariza a imagem
figure, imshow(imagemPasso2),title('Passo 2 - Binarizada com graythresh'); %exibe a imagem

%Passo 3
imagemPasso3 = bwareaopen(imagemPasso2,30); %utiliza o bwareaopen e remove todos os objetos com menos de 30px 
figure, imshow(imagemPasso3),title('Passo 3 - Com bwareaopen 30'); %exibe a imagem

%Passo 4
se = strel('disk',2);  %cria a estrutura morfológica de um disco de tamanho 2
imagemPasso4 = imclose(imagemPasso3,se); %faz o fechamento da estrutura morfológica

figure, imshow(imagemPasso4),title('Passo 4 - Com strel tipo disco tamanho 2 e imclose'); %exibe a imagem

%Passo 5

imagemPasso5 = imfill(imagemPasso4,'holes'); %preenche os objetos da imagem
figure, imshow(imagemPasso5),title('Passo 5 - Holes preenchidos'); %exibe a imagem

%Passo 6

CC = bwconncomp(imagemPasso5); %obtém as componentes conectadas da imagem
L = labelmatrix(CC); %cria uma matriz de label a partir das componentes conectadas
imagemPasso6 = label2rgb(L,'jet',[0.5,0.5,0.5]); %converte a imagem para rgb, deixando o fundo cinza
figure, imshow(imagemPasso6),title('Passo 6 - objetos coloridos com label2rgb'); %exibe a imagem

%Passo 7

[B,L,N,A] = bwboundaries(imagemPasso5);%obtém a borda nos objetos da imagem
figure; imshow(imagemPasso6),title('Passo 7 - Borda branca nos objetos'); hold on; %exibe a imagem e faz o plot da borda
for k=1:length(B), 
    if(~sum(A(k,:)))
       boundary = B{k};
       plot(boundary(:,2),...
           boundary(:,1),'w','LineWidth',2);
    end
end
hold off;

%Passo 8
[B,L,N,A] = bwboundaries(imagemPasso5);%obtém a borda nos objetos da imagem
stats = regionprops(imagemPasso5,'Area', 'Perimeter','EquivDiameter') %obtém area, perimetro e diametro dos objetos
figure; imshow(imagemPasso6),title('Passo 8 - Circularidade mais próximos que 1 indicam objetos mais arredondados'); hold on;
%exibe a imagem e plota
for k=1:length(B),
    if(~sum(A(k,:)))
       boundary = B{k};
       plot(boundary(:,2),...
           boundary(:,1),'w','LineWidth',2);
    end
    rotulada=bwlabel(imagemPasso5,4); % aplica o bwlabel e altere aqui para conectividade 4 ou 8
    qtd_regioes=max(max(rotulada)); % qtd regiões rotuladas
    props = regionprops(rotulada,'Centroid'); % centróides
    for k = 1 : qtd_regioes % insere os rótulos das regiões
        pos_Centroid = props(k).Centroid; %obtem a posicao dos centroids
        plot(pos_Centroid(1)-3, pos_Centroid(2), 'ko','MarkerEdgeColor',[0.5,0.5,0.5]); %plota o centroid
        
        perimetro = cat(1, stats.Perimeter); %armazena em um vetor os perimetros dos objetos
        area = cat(1, stats.Area);%armazena em um vetor as areas dos objetos
        diametro = cat(1, stats.EquivDiameter);%armazena em um vetor os diametros dos objetos
        valor = 4* pi * (area(k)/(perimetro(k)*perimetro(k))); %calculo da circularidade
        %informa a circularidade
        text(pos_Centroid(1)-(diametro(k)/2)-45, pos_Centroid(2), num2str(valor,'%1.2f'), 'FontSize', 8, 'FontWeight', 'Bold','Color', 'Yellow');
    end  
end
